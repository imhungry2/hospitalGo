name: on-container-cicd

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v4

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'temurin'

      - name: Build Spring Boot JAR
        run: ./gradlew clean bootJar

      - name: Docker Hub Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Backend Image
        run: |
          export DOCKER_BUILDKIT=1
          docker build -t ${{ secrets.DOCKER_USERNAME }}/reservation-backend:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/reservation-backend:latest

      - name: Build and Push Frontend Image
        run: |
          export DOCKER_BUILDKIT=1
          docker build -t ${{ secrets.DOCKER_USERNAME }}/reservation-frontend:latest ./frontend
          docker push ${{ secrets.DOCKER_USERNAME }}/reservation-frontend:latest

      - name: Build and Push NGINX Image
        run: |
          export DOCKER_BUILDKIT=1
          docker build -t ${{ secrets.DOCKER_USERNAME }}/reservation-nginx:latest -f nginx/Dockerfile .
          docker push ${{ secrets.DOCKER_USERNAME }}/reservation-nginx:latest

      - name: Clean Up Docker Images After Build
        run: docker system prune -af --volumes

  deploy:
    runs-on: self-hosted
    needs: build
    steps:
      - name: Pull Latest Docker Images
        run: |
          docker pull ${{ secrets.DOCKER_USERNAME }}/reservation-backend:latest
          docker pull ${{ secrets.DOCKER_USERNAME }}/reservation-frontend:latest
          docker pull ${{ secrets.DOCKER_USERNAME }}/reservation-nginx:latest

      - name: Create .env file
        run: |
          if [ -f ".env" ]; then rm .env; fi
          echo "RDS_ENDPOINT=${{ secrets.RDS_ENDPOINT }}" >> .env
          echo "RDS_USERNAME=${{ secrets.RDS_USERNAME }}" >> .env
          echo "RDS_PASSWORD=${{ secrets.RDS_PASSWORD }}" >> .env
          echo "JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}" >> .env
          echo "KAKAO_CLIENT_ID=${{ secrets.KAKAO_CLIENT_ID }}" >> .env
          echo "KAKAO_CLIENT_SECRET=${{ secrets.KAKAO_CLIENT_SECRET }}" >> .env
          echo "REACT_APP_API_URL=${{ secrets.REACT_APP_API_URL }}" >> .env

      - name: docker app service container start
        run: docker-compose --env-file .env up -d

      - name: Clean Up Unused Docker Resources
        run: docker system prune -f
        