name: CI/CD for Spring Boot and React

on:
  push:
    branches:
      - main

jobs:
  # 1. Build Job
  build:
    runs-on: self-hosted
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Check and Build React
        run: |
          if [ ! -d "frontend/build" ]; then
            echo "React build directory not found. Building React application..."
            cd frontend
            npm install
            npm run build
            cd ..
          else
            echo "React build directory already exists. Skipping React build..."
          fi

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build Spring Boot JAR
        run: |
          ./gradlew clean build -x test

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/reservation-app:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/reservation-app:latest

  # 2. Deploy Job
  deploy:
    runs-on: self-hosted
    needs: build
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Deploy using Docker Compose
        run: |
          export DB_URL=${{ secrets.RDS_URL }}
          export DB_USERNAME=${{ secrets.RDS_USERNAME }}
          export DB_PASSWORD=${{ secrets.RDS_PASSWORD }}
          export JWT_SECRET=${{ secrets.JWT_SECRET }}
          export KAKAO_CLIENT_ID=${{ secrets.KAKAO_CLIENT_ID }}
          export KAKAO_CLIENT_SECRET=${{ secrets.KAKAO_CLIENT_SECRET }}
          docker compose -f docker-compose.yml up -d
