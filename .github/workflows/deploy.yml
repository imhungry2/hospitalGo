name: on-container-cicd

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v4

      - name: Set up Gradle Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'temurin'

      - name: Build Spring Boot JAR
        run: ./gradlew clean bootJar

      - name: Docker Hub Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Backend Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/reservation-backend:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/reservation-backend:latest

      - name: Build and Push Frontend Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/reservation-frontend:latest ./frontend
          docker push ${{ secrets.DOCKER_USERNAME }}/reservation-frontend:latest

      - name: Build and Push NGINX Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/reservation-nginx:latest ./nginx
          docker push ${{ secrets.DOCKER_USERNAME }}/reservation-nginx:latest

  deploy:
    runs-on: self-hosted
    needs: build
    steps:
      - name: Stop and Remove Existing Containers
        run: |
          docker-compose -f docker-compose.ec2.yml down --rmi all -v --remove-orphans
          docker container prune -f
          docker image prune -f
          docker network prune -f

      - name: Pull Latest Docker Images
        run: |
          docker pull ${{ secrets.DOCKER_USERNAME }}/reservation-backend:latest
          docker pull ${{ secrets.DOCKER_USERNAME }}/reservation-frontend:latest
          docker pull ${{ secrets.DOCKER_USERNAME }}/reservation-nginx:latest

      - name: Create .env file
        run: |
          echo "RDS_USERNAME=${{ secrets.RDS_USERNAME }}" > .env
          echo "RDS_PASSWORD=${{ secrets.RDS_PASSWORD }}" >> .env
          echo "RDS_ENDPOINT=${{ secrets.RDS_ENDPOINT }}" >> .env
          echo "JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}" >> .env
          echo "KAKAO_CLIENT_ID=${{ secrets.KAKAO_CLIENT_ID }}" >> .env
          echo "KAKAO_CLIENT_SECRET=${{ secrets.KAKAO_CLIENT_SECRET }}" >> .env
          echo "SPRING_PROFILES_ACTIVE=prod" >> .env

      - name: Start New Containers
        run: docker-compose -f docker-compose.ec2.yml --env-file .env up -d

      - name: Clean Up Unused Docker Resources
        run: docker system prune -f
