name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1. GitHub Repository Checkout
      - name: Check out the repository
        uses: actions/checkout@v3

      # 2. Set up Java (JDK 17)
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # 3. Cache Gradle Packages
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # 4. Build Backend with Gradle
      - name: Build Backend with Gradle
        run: |
          ./gradlew clean build --stacktrace
          ls -al build/libs/

      # 5. Build Frontend
      # Node.js 환경은 기본으로 제공되므로 actions/setup-node를 제거
      - name: Build Frontend
        working-directory: frontend
        run: |
          npm install
          npm run build
          ls -al build/

      # 6. Copy Frontend to Backend Static Resources
      - name: Copy Frontend to Backend Static Resources
        run: cp -r frontend/build/* src/main/resources/static/

      # 7. Build Docker Image
      - name: Build Docker Image
        run: docker build -t sjnnj/reservation:latest .

      # 8. Login to Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 9. Push Docker Image to Docker Hub
      - name: Push Docker Image to Docker Hub
        run: docker push sjnnj/reservation:latest
